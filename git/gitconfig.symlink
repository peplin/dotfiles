[user]
    name = Christopher Peplin
    email = chris.peplin@rhubarbtech.com
[color]
    diff = auto
    status = auto
    ui = auto
    branch = auto
[color "branch"]
    current = yellow reverse
    local = yellow
    remote = green
[color "status"]
    added = yellow
    changed = green
    untracked = cyan
[core]
    whitespace=fix,-indent-with-non-tab,trailing-space,-cr-at-eol
    excludesfile = ~/.gitignore
    editor = vim
    autocrlf = input
[alias]
    aa = !git add --all && git add . && git status
    st = status -sb
    ci = commit -v
    c = commit -m
    ca = commit --amend -C HEAD
    co = checkout
    lg = log -p --date=local
    cp = cherry-pick -x
    git = status
    diffup = diff @{upstream}
    l = "!f() { git log --graph --format=fuller --pretty=\"tformat:%C(yellow)%h%Creset %Cgreen(%cr)%Creset %C(bold blue)%an%Creset %C(red)%d%Creset %s\" $*; } ; f"
    unmerged = branch -a --no-merged
    merged = branch -a --merged
    br = !~/.dotfiles/git/branch_tree.sh --fast
    pr = !~/.dotfiles/git/branch_tree.sh
    # Squash all commits since the fork point in the current branch into 1 commit
    squash = !~/.dotfiles/git/squashall.sh
    # Flow down changes from base branches to child branches by rebasing
    flow = !~/.dotfiles/git/flow.sh
    # Fetch origin, then flow down all changes to child branches from main/master
    refresh = !git fetch --no-tags origin && ~/.dotfiles/git/flow.sh -b all && git tidy && git br
    offline-refresh = !~/.dotfiles/git/flow.sh -b all && git tidy && git br
    move = !~/.dotfiles/git/move.sh
    tidy = !~/.dotfiles/git/tidy.sh
    fp = "!bash -c 'f() { [[ ! $(git rev-parse --abbrev-ref HEAD) =~ ^ma(in|ster)$ ]] && git push --force origin || echo \"Not force pushing main branch\"; } ; f'"
    discard = !git reset HEAD -- && git co -- .
    rc = "-c core.editor=true rebase --continue"

[apply]
    whitespace = nowarn
[branch]
    autosetupmerge = always
    autosetuprebase = always
[github]
    user = peplin
[push]
    default = current
[help]
    autocorrect = 1
[merge]
    tool = fugitive
    keepBackup = false
    keepTemporaries = false
    prompt = false
[interactive]
    singlekey = true
[init]
    templatedir = ~/.git_template
    defaultBranch = main
[mergetool "fugitive"]
    cmd = vim -f -c \"Gvdiffsplit!\" \"$MERGED\"
[fetch]
    recurseSubmodules = on-demand
[rerere]
    enabled = true
[filter "lfs"]
    required = true
    clean = git-lfs clean -- %f
    smudge = git-lfs smudge -- %f
    process = git-lfs filter-process
[mergetool]
    keepBackup = false
[advice]
    skippedCherryPicks = false
[includeIf "hasconfig:remote.*.url:git@github.com:VantaInc/**"]
    path = gitconfig-vanta
